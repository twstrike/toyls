package toyls

import . "gopkg.in/check.v1"

func (s *ToySuite) TestDeserializeServerHello(c *C) {
	helloBody := []byte{
		//server_version
		0x03, 0x03, //ProtocolVersion

		//random (Random)
		0x00, 0x00, 0x00, 0x00, //gmt_unix_time
		0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, //random_bytes
		0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
		0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,

		//session_id (SessionID)
		0x0A,                                                       //length
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, //SessionID

		//cipher_suite
		0x00, 0x2f, // CipherSuite: TLS_RSA_WITH_AES_128_CBC_SHA

		//compression_method
		0x00, //NULL
	}

	msg, err := deserializeServerHello(helloBody)

	expected := &serverHelloBody{
		serverVersion: protocolVersion{0x03, 0x03},
		random: random{
			0,
			[28]byte{0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
				0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
				0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
				0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07},
		},
		sessionID:         []byte{0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09},
		cipherSuite:       cipherSuite{0x00, 0x2f},
		compressionMethod: 0x00,
	}
	c.Assert(err, IsNil)
	c.Assert(msg, DeepEquals, expected)
}
